/**
 * Fabricator styles
 * @author Luke Askew
 * Class selectors are namespaced with "f-"
 */
/**
 * Github-like theme for Prism.js
 * @author Luke Askew http://github.com/lukeaskew
 */
code,
code[class*='language-'],
pre[class*='language-'] {
  color: #333;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  -moz-tab-size: 4;
       tab-size: 4;
  -webkit-hyphens: none;
      -ms-hyphens: none;
          hyphens: none;
  font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace;
  line-height: 1.4;
  direction: ltr;
  cursor: text;
  letter-spacing: normal; }

pre[class*='language-'] {
  overflow: auto;
  margin: 1em 0;
  padding: 1.2em;
  border-radius: 3px;
  font-size: 85%; }

p code,
li code,
table code {
  margin: 0;
  border-radius: 3px;
  padding: 0.2em 0;
  font-size: 85%; }
  p code:before, p code:after,
  li code:before,
  li code:after,
  table code:before,
  table code:after {
    letter-spacing: -0.2em;
    content: '\00a0'; }

code,
:not(pre) > code[class*='language-'],
pre[class*='language-'] {
  background: #f7f7f7; }

:not(pre) > code[class*='language-'] {
  padding: 0.1em;
  border-radius: 0.3em; }

.token.comment, .token.prolog, .token.doctype, .token.cdata {
  color: #969896; }

.token.punctuation, .token.string, .token.atrule, .token.attr-value {
  color: #183691; }

.token.property, .token.tag {
  color: #63a35c; }

.token.boolean, .token.number {
  color: #0086b3; }

.token.selector, .token.attr-name,
.token.attr-value .punctuation:first-child, .token.keyword, .token.regex, .token.important {
  color: #a71d5d; }

.token.operator, .token.entity, .token.url,
.language-css .token.string {
  color: #a71d5d; }

.token.entity {
  cursor: help; }

.namespace {
  opacity: 0.7; }

.f-color-chips {
  display: flex;
  flex-wrap: wrap; }

.f-color-chip {
  flex-grow: 1;
  flex-shrink: 0;
  flex-basis: 100%;
  border-top-width: 8em;
  border-top-style: solid;
  border-bottom-width: 0;
  border-bottom-style: solid;
  background-color: #fff;
  font-weight: 700;
  font-size: 0.75em;
  padding: 1em;
  margin-bottom: 2em;
  box-sizing: border-box; }
  @media (min-width: 60em) {
    .f-color-chip {
      flex-basis: 13em; } }
  .f-color-chip .f-color-chip__color {
    background-color: #fff;
    content: attr(data-color);
    font-weight: 400; }

.f-controls {
  box-sizing: border-box; }
  .f-controls:after {
    clear: both; }
  .f-controls:before, .f-controls:after {
    display: table;
    content: ' '; }
  .f-controls .f-control {
    display: block;
    float: left;
    text-align: center;
    width: 33.33333%;
    margin: 0;
    padding: 1rem 0; }
    .f-controls .f-control.f-active {
      box-shadow: inset 0 0.25rem 0 0 #0081fa; }
      .f-controls .f-control.f-active use {
        fill: #cccccc; }
    .f-controls .f-control svg {
      vertical-align: middle; }
      .f-controls .f-control svg use {
        fill: #757575; }

.f-control {
  box-sizing: border-box;
  display: inline-block;
  cursor: pointer;
  margin-left: 0.66rem; }
  .f-control:first-child {
    margin-left: 0; }
  .f-control svg {
    width: 1rem;
    height: 1rem; }
    .f-control svg use {
      fill: #cccccc; }

.f-control-bar {
  padding: 1.25rem 0 1rem; }
  .f-control-bar:after {
    clear: both; }
  .f-control-bar:before, .f-control-bar:after {
    display: table;
    content: ' '; }

.f-menu-toggle {
  cursor: pointer;
  vertical-align: middle; }
  .f-menu-toggle svg {
    display: block;
    float: left;
    margin-bottom: -1px; }

.f-item-group {
  margin-top: 3rem;
  margin-bottom: 3rem;
  padding-bottom: 3rem;
  border-bottom: 1px solid #cccccc; }
  .f-item-group:after {
    clear: both; }
  .f-item-group:before, .f-item-group:after {
    display: table;
    content: ' '; }
  .f-item-group:last-child {
    border-bottom: 0;
    margin-bottom: 0; }
  .f-item-group ~ .f-item-group {
    margin-top: 0; }
  .f-item-group > .f-item-group {
    padding-bottom: 1.5rem;
    margin-bottom: 1.5rem;
    border-bottom: 0; }
    .f-item-group > .f-item-group:first-of-type {
      margin-top: 0; }
    .f-item-group > .f-item-group:last-child {
      margin-bottom: 0;
      padding-bottom: 0; }

.f-item-code, .f-item-styles {
  margin-top: 2rem; }

.f-item-preview:after {
  clear: both; }

.f-item-preview:before, .f-item-preview:after {
  display: table;
  content: ' '; }

.f-item-border-bottom {
  border-bottom: 1px solid #cccccc; }

.f-item-heading-group {
  margin-bottom: .6rem;
  vertical-align: middle; }
  .f-item-heading-group:after {
    clear: both; }
  .f-item-heading-group:before, .f-item-heading-group:after {
    display: table;
    content: ' '; }

.f-item-heading {
  margin-top: 0;
  margin-bottom: 0;
  display: inline-block;
  vertical-align: middle;
  line-height: 1; }

.f-item-controls {
  display: inline-block;
  vertical-align: middle;
  margin-left: 0.5rem; }
  .f-item-controls .f-control {
    width: 0.875rem;
    height: 0.875rem;
    display: block;
    float: left; }
    .f-item-controls .f-control:hover use {
      fill: #757575; }
    .f-item-controls .f-control use {
      fill: #cccccc; }

.f-item-hidden {
  display: none; }

.f-item-notes {
  font-size: 0.875rem; }

.f-item-styles {
  background-color: blue; }

html {
  height: 100%; }
  html.f-menu-active {
    overflow: hidden; }
    @media (min-width: 60em) {
      html.f-menu-active {
        overflow: auto; } }

body {
  margin: 0;
  position: relative; }
  .f-menu-active body {
    width: 100%;
    height: 100%;
    overflow: hidden; }
    @media (min-width: 60em) {
      .f-menu-active body {
        overflow: auto;
        height: auto; } }

.f-container {
  box-sizing: border-box;
  position: relative;
  padding: 0 1em;
  z-index: 0;
  min-height: 100vh; }
  .f-container:after {
    clear: both; }
  .f-container:before, .f-container:after {
    display: table;
    content: ' '; }
  .f-menu-active .f-container {
    transform: translate(14rem, 0); }
    @media (min-width: 60em) {
      .f-menu-active .f-container {
        margin-left: 14rem;
        transform: translate(0, 0); } }

.f-menu {
  box-sizing: border-box;
  position: fixed;
  top: 0;
  left: 0;
  transform: translate(-14rem, 0);
  width: 14rem;
  height: 100%;
  z-index: 1;
  background-color: #1f1f1f;
  overflow-x: hidden;
  overflow-y: auto;
  -webkit-overflow-scrolling: touch; }
  .f-menu-active .f-menu {
    transform: translate(0, 0); }
  .f-menu ul {
    margin-top: 0;
    margin-bottom: 0;
    padding-left: 0; }
  .f-menu > ul {
    margin-top: 0;
    margin-bottom: 1rem; }
    .f-menu > ul > li {
      margin-top: 1rem; }
  .f-menu li {
    list-style-type: none;
    margin-top: 0;
    margin-bottom: 0; }
  .f-menu a {
    display: block;
    padding: 0.33rem 2rem;
    color: #cccccc !important;
    text-decoration: none;
    font-size: 0.875rem;
    line-height: 1.5; }
    .f-menu a:hover {
      color: #cccccc !important;
      text-decoration: underline; }
    .f-menu a.f-active {
      box-shadow: inset 0.25rem 0 0 0 #0081fa; }
  .f-menu .f-menu__heading {
    padding-left: 1.5rem;
    font-weight: 700;
    font-size: 0.875rem; }
    .f-menu .f-menu__heading:hover {
      color: #757575; }

[data-variation="true"] {
  position: relative !important;
  margin-top: 10px;
  display: block;
  margin-right: 30%;
  float: none; }

[data-variation]::after {
  content: "class: " attr(class);
  position: absolute;
  bottom: -2px;
  left: calc(100% + 10px);
  font: 1rem normal monospace;
  color: black;
  background-color: #fff6e3;
  border: 1px solid #ffd9b8;
  padding: 3px 5px;
  border-radius: 3px;
  white-space: nowrap; }

.table[data-variation="true"] {
  display: table;
  magin-right: 0;
  margin-top: 30px; }

.table[data-variation]::after {
  top: -1.6rem;
  bottom: auto;
  left: 0; }

span.textInputClasses {
  float: right;
  font: 1rem normal monospace;
  color: black;
  background-color: #fff6e3;
  border: 1px solid #ffd9b8;
  margin: 20px 0 0;
  padding: 3px 5px;
  border-radius: 3px;
  white-space: nowrap; }
  span.textInputClasses::after {
    content: none;
    display: none; }

span.textInputClasses + input[type="text"] {
  width: 70%; }

.variations code.language-css {
  display: block;
  padding-left: 15px; }
  .variations code.language-css.selected {
    background-color: white;
    padding: 10px;
    border-left: 10px solid #ff9090;
    margin: 5px -5px; }

.f-item-hidden[variation="true"] {
  display: none !important; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZhYnJpY2F0b3Iuc2NzcyIsInBhcnRpYWxzL19jb2RlLnNjc3MiLCJwYXJ0aWFscy9fY29sb3ItY2hpcHMuc2NzcyIsInBhcnRpYWxzL19jb250cm9scy5zY3NzIiwicGFydGlhbHMvX3ZhcmlhYmxlcy5zY3NzIiwicGFydGlhbHMvX2l0ZW0uc2NzcyIsInBhcnRpYWxzL19sYXlvdXQuc2NzcyIsInBhcnRpYWxzL19tZW51LnNjc3MiLCJmYWJyaWNhdG9yLmNzcyIsInBhcnRpYWxzL19jdXN0b20uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FDSkg7OztHQUdHO0FBZ0JIOzs7RUFHQyxZQWJXO0VBY1gsaUJBQWlCO0VBQ2pCLGlCQUFpQjtFQUNqQixxQkFBcUI7RUFDckIsaUJBQVk7T0FBWixZQUFZO0VBQ1osc0JBQWM7TUFBZCxrQkFBYztVQUFkLGNBQWM7RUFDZCxvRUFBb0U7RUFDcEUsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixhQUFhO0VBQ2IsdUJBQXVCLEVBQ3ZCOztBQUdEO0VBQ0MsZUFBZTtFQUNmLGNBQWM7RUFDZCxlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLGVBQWUsRUFDZjs7QUFFRDs7O0VBR0MsVUFBVTtFQUNWLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsZUFBZSxFQU9mO0VBYkQ7Ozs7O0lBVUUsdUJBQXVCO0lBQ3ZCLGlCQUFpQixFQUNqQjs7QUFHRjs7O0VBR0Msb0JBakRtQixFQWtEbkI7O0FBR0Q7RUFDQyxlQUFlO0VBQ2YscUJBQXFCLEVBQ3JCOztBQUlEO0VBTUUsZUFqRWlCLEVBa0VqQjs7QUFQRjtFQWFFLGVBL0VZLEVBZ0ZaOztBQWRGO0VBa0JFLGVBL0VhLEVBZ0ZiOztBQW5CRjtFQXVCRSxlQXhGWSxFQXlGWjs7QUF4QkY7O0VBZ0NFLGVBOUZjLEVBK0ZkOztBQWpDRjs7RUF3Q0UsZUF2R2MsRUF3R2Q7O0FBekNGO0VBNENFLGFBQWEsRUFDYjs7QUFJRjtFQUNDLGFBQWEsRUFDYjs7QUM1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MEJBQTBCO0VBQzFCLDBCQUEwQjtFQUMxQixpQkFBaUI7RUFDakIsbUJBQW1CO0VBQ25CLG9CQUFvQixFQUNwQjs7QUFDRDtFQUNDLGVBQWU7RUFDZixlQUFlO0VBQ2YsaUJBQWlCLEVBQ2pCOztBQUNEO0VBQ0MsYUFBYTtFQUNiLGFBQWE7RUFDYixRQUFRLEVBQ1I7O0FBQ0Q7RUFDQyxhQUFhO0VBQ1YsNEJBQTRCO0VBQzVCLGFBQWE7RUFDYiwwQkFBMEI7RUFDMUIsMEJBQTBCO0VBQzdCLGlCQUFpQjtFQUNkLGlCQUFpQjtFQUNqQixtQkFBbUI7RUFDbkIsb0JBQW9CLEVBS3ZCO0VBZEQ7SUFXSyxjQUFjO0lBQ2QsY0FBYyxFQUNkOztBQUVMO0VBQ0MsV0FBVyxFQUNYOztBQUVEO0VBQ0MsZUFBZTtFQUNmLG1CQUFtQixFQVFuQjtFQVZEO0lBS0Usd0JBQXdCO0lBQ3JCLGNBQWM7SUFDZCxnQ0FBZ0M7SUFDaEMsaUJBQWlCLEVBQ3BCOztBQUdGO0VBQ0MseUJBQXlCLEVBQ3pCIiwiZmlsZSI6ImYuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEZhYnJpY2F0b3Igc3R5bGVzXHJcbiAqIEBhdXRob3IgTHVrZSBBc2tld1xyXG4gKiBDbGFzcyBzZWxlY3RvcnMgYXJlIG5hbWVzcGFjZWQgd2l0aCBcImYtXCJcclxuICovXHJcblxyXG4kc2V0dGluZ3M6IChcclxuXHR0aGVtZTogZGFyayxcclxuXHRhY2NlbnQ6IGhzbCgyMDksIDEwMCUsIDQ5JSksXHJcblx0bWVudS13aWR0aDogMTRyZW1cclxuKTtcclxuXHJcbkBpbXBvcnQgJ3BhcnRpYWxzL3ZhcmlhYmxlcyc7XHJcbkBpbXBvcnQgJ3BhcnRpYWxzL2NvZGUnO1xyXG5AaW1wb3J0ICdwYXJ0aWFscy9jb2xvci1jaGlwcyc7XHJcbkBpbXBvcnQgJ3BhcnRpYWxzL2NvbnRyb2xzJztcclxuQGltcG9ydCAncGFydGlhbHMvaXRlbSc7XHJcbkBpbXBvcnQgJ3BhcnRpYWxzL2xheW91dCc7XHJcbkBpbXBvcnQgJ3BhcnRpYWxzL21lbnUnO1xyXG5AaW1wb3J0ICdwYXJ0aWFscy9jdXN0b20nO1xyXG4iLCIvKipcclxuICogR2l0aHViLWxpa2UgdGhlbWUgZm9yIFByaXNtLmpzXHJcbiAqIEBhdXRob3IgTHVrZSBBc2tldyBodHRwOi8vZ2l0aHViLmNvbS9sdWtlYXNrZXdcclxuICovXHJcblxyXG4vLyBjb2xvciB2YXJzXHJcbiRjb2RlLWNvbG9yczogKFxyXG5cdGJsdWU6ICMxODM2OTEsXHJcblx0dGVhbDogIzAwODZiMyxcclxuXHRibGFjazogIzMzMyxcclxuXHRwdXJwbGU6ICNhNzFkNWQsXHJcblx0bWFyb29uOiAjYTcxZDVkLFxyXG5cdGdyZWVuOiAjNjNhMzVjLFxyXG5cdGxpZ2h0LWdyYXk6ICNmN2Y3ZjcsXHJcblx0ZGFyay1ncmF5OiAjOTY5ODk2XHJcbik7XHJcblxyXG5cclxuLy8gYmFzZVxyXG5jb2RlLFxyXG5jb2RlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10sXHJcbnByZVtjbGFzcyo9J2xhbmd1YWdlLSddIHtcclxuXHRjb2xvcjogbWFwLWdldCgkY29kZS1jb2xvcnMsIGJsYWNrKTtcclxuXHR0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cdHdoaXRlLXNwYWNlOiBwcmU7XHJcblx0d29yZC1zcGFjaW5nOiBub3JtYWw7XHJcblx0dGFiLXNpemU6IDQ7XHJcblx0aHlwaGVuczogbm9uZTtcclxuXHRmb250LWZhbWlseTogQ29uc29sYXMsICdMaWJlcmF0aW9uIE1vbm8nLCBNZW5sbywgQ291cmllciwgbW9ub3NwYWNlO1xyXG5cdGxpbmUtaGVpZ2h0OiAxLjQ7XHJcblx0ZGlyZWN0aW9uOiBsdHI7XHJcblx0Y3Vyc29yOiB0ZXh0O1xyXG5cdGxldHRlci1zcGFjaW5nOiBub3JtYWw7XHJcbn1cclxuXHJcbi8vIGNvZGUgYmxvY2tzXHJcbnByZVtjbGFzcyo9J2xhbmd1YWdlLSddIHtcclxuXHRvdmVyZmxvdzogYXV0bztcclxuXHRtYXJnaW46IDFlbSAwO1xyXG5cdHBhZGRpbmc6IDEuMmVtO1xyXG5cdGJvcmRlci1yYWRpdXM6IDNweDtcclxuXHRmb250LXNpemU6IDg1JTtcclxufVxyXG5cclxucCBjb2RlLFxyXG5saSBjb2RlLFxyXG50YWJsZSBjb2RlIHtcclxuXHRtYXJnaW46IDA7XHJcblx0Ym9yZGVyLXJhZGl1czogM3B4O1xyXG5cdHBhZGRpbmc6IDAuMmVtIDA7XHJcblx0Zm9udC1zaXplOiA4NSU7XHJcblxyXG5cdCY6YmVmb3JlLFxyXG5cdCY6YWZ0ZXIge1xyXG5cdFx0bGV0dGVyLXNwYWNpbmc6IC0wLjJlbTtcclxuXHRcdGNvbnRlbnQ6ICdcXDAwYTAnO1xyXG5cdH1cclxufVxyXG5cclxuY29kZSxcclxuOm5vdChwcmUpID4gY29kZVtjbGFzcyo9J2xhbmd1YWdlLSddLFxyXG5wcmVbY2xhc3MqPSdsYW5ndWFnZS0nXSB7XHJcblx0YmFja2dyb3VuZDogbWFwLWdldCgkY29kZS1jb2xvcnMsIGxpZ2h0LWdyYXkpO1xyXG59XHJcblxyXG4vLyBpbmxpbmUgY29kZVxyXG46bm90KHByZSkgPiBjb2RlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10ge1xyXG5cdHBhZGRpbmc6IDAuMWVtO1xyXG5cdGJvcmRlci1yYWRpdXM6IDAuM2VtO1xyXG59XHJcblxyXG5cclxuLy8gdG9rZW4gY29sb3JzXHJcbi50b2tlbiB7XHJcblxyXG5cdCYuY29tbWVudCxcclxuXHQmLnByb2xvZyxcclxuXHQmLmRvY3R5cGUsXHJcblx0Ji5jZGF0YSB7XHJcblx0XHRjb2xvcjogbWFwLWdldCgkY29kZS1jb2xvcnMsIGRhcmstZ3JheSk7XHJcblx0fVxyXG5cclxuXHQmLnB1bmN0dWF0aW9uLFxyXG5cdCYuc3RyaW5nLFxyXG5cdCYuYXRydWxlLFxyXG5cdCYuYXR0ci12YWx1ZSB7XHJcblx0XHRjb2xvcjogbWFwLWdldCgkY29kZS1jb2xvcnMsIGJsdWUpO1xyXG5cdH1cclxuXHJcblx0Ji5wcm9wZXJ0eSxcclxuXHQmLnRhZyB7XHJcblx0XHRjb2xvcjogbWFwLWdldCgkY29kZS1jb2xvcnMsIGdyZWVuKTtcclxuXHR9XHJcblxyXG5cdCYuYm9vbGVhbixcclxuXHQmLm51bWJlciB7XHJcblx0XHRjb2xvcjogbWFwLWdldCgkY29kZS1jb2xvcnMsIHRlYWwpO1xyXG5cdH1cclxuXHJcblx0Ji5zZWxlY3RvcixcclxuXHQmLmF0dHItbmFtZSxcclxuXHQmLmF0dHItdmFsdWUgLnB1bmN0dWF0aW9uOmZpcnN0LWNoaWxkLFxyXG5cdCYua2V5d29yZCxcclxuXHQmLnJlZ2V4LFxyXG5cdCYuaW1wb3J0YW50IHtcclxuXHRcdGNvbG9yOiBtYXAtZ2V0KCRjb2RlLWNvbG9ycywgbWFyb29uKTtcclxuXHR9XHJcblxyXG5cclxuXHQmLm9wZXJhdG9yLFxyXG5cdCYuZW50aXR5LFxyXG5cdCYudXJsLFxyXG5cdC5sYW5ndWFnZS1jc3MgJi5zdHJpbmcge1xyXG5cdFx0Y29sb3I6IG1hcC1nZXQoJGNvZGUtY29sb3JzLCBwdXJwbGUpO1xyXG5cdH1cclxuXHJcblx0Ji5lbnRpdHkge1xyXG5cdFx0Y3Vyc29yOiBoZWxwO1xyXG5cdH1cclxuXHJcbn1cclxuXHJcbi5uYW1lc3BhY2Uge1xyXG5cdG9wYWNpdHk6IDAuNztcclxufVxyXG4iLCIuZi1jb2xvci1jaGlwcyB7XHJcblx0ZGlzcGxheTogZmxleDtcclxuXHRmbGV4LXdyYXA6IHdyYXA7XHJcbn1cclxuXHJcbi5mLWNvbG9yLWNoaXAge1xyXG5cdGZsZXgtZ3JvdzogMTtcclxuXHRmbGV4LXNocmluazogMDtcclxuXHRmbGV4LWJhc2lzOiAxMDAlO1xyXG5cdGJvcmRlci10b3Atd2lkdGg6IDhlbTtcclxuXHRib3JkZXItdG9wLXN0eWxlOiBzb2xpZDtcclxuXHRib3JkZXItYm90dG9tLXdpZHRoOiAwO1xyXG5cdGJvcmRlci1ib3R0b20tc3R5bGU6IHNvbGlkO1xyXG5cdGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcblx0Zm9udC13ZWlnaHQ6IDcwMDtcclxuXHRmb250LXNpemU6IDAuNzVlbTtcclxuXHRwYWRkaW5nOiAxZW07XHJcblx0bWFyZ2luLWJvdHRvbTogMmVtO1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcblxyXG5cdEBtZWRpYSAobWluLXdpZHRoOiA2MGVtKSB7XHJcblx0XHRmbGV4LWJhc2lzOiAxM2VtO1xyXG5cdH1cclxuXHJcblx0LmYtY29sb3ItY2hpcF9fY29sb3Ige1xyXG5cdFx0YmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuXHRcdGNvbnRlbnQ6IGF0dHIoZGF0YS1jb2xvcik7XHJcblx0XHRmb250LXdlaWdodDogNDAwO1xyXG5cdH1cclxufVxyXG4iLCIuZi1jb250cm9scyB7XHJcblx0QGluY2x1ZGUgY2xlYXJmaXg7XHJcblx0QGluY2x1ZGUgYm9yZGVyLWJveDtcclxuXHJcblx0LmYtY29udHJvbCB7XHJcblx0XHRkaXNwbGF5OiBibG9jaztcclxuXHRcdGZsb2F0OiBsZWZ0O1xyXG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xyXG5cdFx0d2lkdGg6IHBlcmNlbnRhZ2UoMS8zKTtcclxuXHRcdG1hcmdpbjogMDtcclxuXHRcdHBhZGRpbmc6IDFyZW0gMDtcclxuXHJcblx0XHQmLmYtYWN0aXZlIHtcclxuXHRcdFx0Ym94LXNoYWRvdzogaW5zZXQgMCAwLjI1cmVtIDAgMCBjb2xvcihhY2NlbnQpO1xyXG5cclxuXHRcdFx0dXNlIHtcclxuXHRcdFx0XHRmaWxsOiBjb2xvcihtZW51LXRleHQpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0c3ZnIHtcclxuXHRcdFx0dmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuXHJcblx0XHRcdHVzZSB7XHJcblx0XHRcdFx0ZmlsbDogaWYoJHRoZW1lID09ICR0aGVtZS1kYXJrLCBjb2xvcihub3JtYWwpLCBjb2xvcihsaWdodCkgKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuLmYtY29udHJvbCB7XHJcblx0QGluY2x1ZGUgYm9yZGVyLWJveDtcclxuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0Y3Vyc29yOiBwb2ludGVyO1xyXG5cdG1hcmdpbi1sZWZ0OiAwLjY2cmVtO1xyXG5cclxuXHQmOmZpcnN0LWNoaWxkIHtcclxuXHRcdG1hcmdpbi1sZWZ0OiAwO1xyXG5cdH1cclxuXHJcblx0c3ZnIHtcclxuXHRcdHdpZHRoOiAxcmVtO1xyXG5cdFx0aGVpZ2h0OiAxcmVtO1xyXG5cclxuXHRcdHVzZSB7XHJcblx0XHRcdGZpbGw6IGNvbG9yKGxpZ2h0KTtcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi5mLWNvbnRyb2wtYmFyIHtcclxuXHRAaW5jbHVkZSBjbGVhcmZpeDtcclxuXHRwYWRkaW5nOiAxLjI1cmVtIDAgMXJlbTtcclxufVxyXG5cclxuLmYtbWVudS10b2dnbGUge1xyXG5cdGN1cnNvcjogcG9pbnRlcjtcclxuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG5cclxuXHRzdmcge1xyXG5cdFx0ZGlzcGxheTogYmxvY2s7XHJcblx0XHRmbG9hdDogbGVmdDtcclxuXHRcdG1hcmdpbi1ib3R0b206IC0xcHg7XHJcblx0fVxyXG59XHJcbiIsIiRiYXNlLWNvbG9yczogKFxyXG5cdGRhcms6IGhzbCgwLCAwJSwgMTIlKSxcclxuXHRtZWRpdW06IGhzbCgwLCAwJSwgNDYlKSxcclxuXHRsaWdodDogaHNsKDAsIDAlLCA4MCUpLFxyXG5cdGFjY2VudDogbWFwLWdldCgkc2V0dGluZ3MsIGFjY2VudClcclxuKTtcclxuXHJcbiR0aGVtZS1kYXJrOiAoXHJcblx0bWVudS1iYWNrZ3JvdW5kOiBtYXAtZ2V0KCRiYXNlLWNvbG9ycywgZGFyayksXHJcblx0bWVudS10ZXh0OiBtYXAtZ2V0KCRiYXNlLWNvbG9ycywgbGlnaHQpLFxyXG5cdG5vcm1hbDogbWFwLWdldCgkYmFzZS1jb2xvcnMsIG1lZGl1bSlcclxuKTtcclxuXHJcbiR0aGVtZS1saWdodDogKFxyXG5cdG1lbnUtYmFja2dyb3VuZDogaHNsKDAsIDAlLCAxMDAlKSxcclxuXHRtZW51LXRleHQ6IG1hcC1nZXQoJGJhc2UtY29sb3JzLCBtZWRpdW0pLFxyXG5cdG5vcm1hbDogbWFwLWdldCgkYmFzZS1jb2xvcnMsIG1lZGl1bSlcclxuKTtcclxuXHJcbiR0aGVtZTogJHRoZW1lLWxpZ2h0ICFkZWZhdWx0O1xyXG5cclxuQGlmIChtYXAtZ2V0KCRzZXR0aW5ncywgdGhlbWUpID09ICdkYXJrJykge1xyXG5cdCR0aGVtZTogJHRoZW1lLWRhcms7XHJcbn1cclxuXHJcbiRjb2xvcnM6IG1hcC1tZXJnZSgkYmFzZS1jb2xvcnMsICR0aGVtZSk7XHJcblxyXG4kbWVudS13aWR0aDogbWFwLWdldCgkc2V0dGluZ3MsIG1lbnUtd2lkdGgpO1xyXG5cclxuXHJcbi8vIGZ1bmN0aW9uc1xyXG5AZnVuY3Rpb24gY29sb3IoJGNvbG9yKSB7XHJcbiAgICBAcmV0dXJuIG1hcC1nZXQoJGNvbG9ycywgJGNvbG9yKTtcclxufVxyXG5cclxuXHJcbi8vIG1peGluc1xyXG5AbWl4aW4gY2xlYXJmaXgge1xyXG5cdCY6YWZ0ZXIge1xyXG5cdFx0Y2xlYXI6IGJvdGg7XHJcblx0fVxyXG5cclxuXHQmOmJlZm9yZSxcclxuXHQmOmFmdGVyIHtcclxuXHRcdGRpc3BsYXk6IHRhYmxlO1xyXG5cdFx0Y29udGVudDogJyAnO1xyXG5cdH1cclxufVxyXG5cclxuQG1peGluIGJvcmRlci1ib3gge1xyXG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuIiwiLmYtaXRlbS1ncm91cCB7XHJcblx0QGluY2x1ZGUgY2xlYXJmaXg7XHJcblx0bWFyZ2luLXRvcDogM3JlbTtcclxuXHRtYXJnaW4tYm90dG9tOiAzcmVtO1xyXG5cdHBhZGRpbmctYm90dG9tOiAzcmVtO1xyXG5cdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBjb2xvcihsaWdodCk7XHJcblxyXG5cdCY6bGFzdC1jaGlsZCB7XHJcblx0XHRib3JkZXItYm90dG9tOiAwO1xyXG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcclxuXHR9XHJcblxyXG5cdCYgfiAmIHtcclxuXHRcdG1hcmdpbi10b3A6IDA7XHJcblx0fVxyXG5cclxuXHQmID4gJiB7XHJcblx0XHRwYWRkaW5nLWJvdHRvbTogMS41cmVtO1xyXG5cdFx0bWFyZ2luLWJvdHRvbTogMS41cmVtO1xyXG5cdFx0Ym9yZGVyLWJvdHRvbTogMDtcclxuXHJcblx0XHQmOmZpcnN0LW9mLXR5cGUge1xyXG5cdFx0XHRtYXJnaW4tdG9wOiAwO1xyXG5cdFx0fVxyXG5cclxuXHRcdCY6bGFzdC1jaGlsZCB7XHJcblx0XHRcdG1hcmdpbi1ib3R0b206IDA7XHJcblx0XHRcdHBhZGRpbmctYm90dG9tOiAwO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuLmYtaXRlbS1jb2RlIHtcclxuXHRtYXJnaW4tdG9wOiAycmVtO1xyXG59XHJcblxyXG4uZi1pdGVtLXByZXZpZXcge1xyXG5cdEBpbmNsdWRlIGNsZWFyZml4O1xyXG59XHJcblxyXG4uZi1pdGVtLWJvcmRlci1ib3R0b20ge1xyXG5cdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBjb2xvcihsaWdodCk7XHJcbn1cclxuXHJcbi5mLWl0ZW0taGVhZGluZy1ncm91cCB7XHJcblx0QGluY2x1ZGUgY2xlYXJmaXg7XHJcblx0bWFyZ2luLWJvdHRvbTogLjZyZW07IC8vcmVkdWNlZCBtYXJnaW4gdG8gbWFrZSBpdCBsb29rIGJldHRlclxyXG5cdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxuXHJcbi5mLWl0ZW0taGVhZGluZyB7XHJcblx0bWFyZ2luLXRvcDogMDtcclxuXHRtYXJnaW4tYm90dG9tOiAwO1xyXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuXHR2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG5cdGxpbmUtaGVpZ2h0OiAxO1xyXG59XHJcblxyXG5cclxuLmYtaXRlbS1jb250cm9scyB7XHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcblx0bWFyZ2luLWxlZnQ6IDAuNXJlbTtcclxuXHJcblx0LmYtY29udHJvbCB7XHJcblx0XHR3aWR0aDogMC44NzVyZW07XHJcblx0XHRoZWlnaHQ6IDAuODc1cmVtO1xyXG5cdFx0ZGlzcGxheTogYmxvY2s7XHJcblx0XHRmbG9hdDogbGVmdDtcclxuXHJcblx0XHQmOmhvdmVyIHtcclxuXHRcdFx0dXNlIHtcclxuXHRcdFx0XHRmaWxsOiBjb2xvcihub3JtYWwpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0dXNlIHtcclxuXHRcdFx0ZmlsbDogY29sb3IobGlnaHQpO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuLmYtaXRlbS1oaWRkZW4ge1xyXG5cdGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5mLWl0ZW0tbm90ZXMge1xyXG5cdGZvbnQtc2l6ZTogMC44NzVyZW07XHJcbn1cclxuXHJcbi5mLWl0ZW0tc3R5bGVzIHtcclxuXHRAZXh0ZW5kIC5mLWl0ZW0tY29kZTtcclxuXHRiYWNrZ3JvdW5kLWNvbG9yOiBibHVlO1xyXG59IiwiaHRtbCB7XHJcblx0aGVpZ2h0OiAxMDAlO1xyXG5cclxuXHQmLmYtbWVudS1hY3RpdmUge1xyXG5cdFx0b3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcblx0XHRAbWVkaWEgKG1pbi13aWR0aDogNjBlbSkge1xyXG5cdFx0XHRvdmVyZmxvdzogYXV0bztcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbmJvZHkge1xyXG5cdG1hcmdpbjogMDtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG5cdC5mLW1lbnUtYWN0aXZlICYge1xyXG5cdFx0d2lkdGg6MTAwJTtcclxuXHRcdGhlaWdodDogMTAwJTtcclxuXHRcdG92ZXJmbG93OiBoaWRkZW47XHJcblxyXG5cdFx0QG1lZGlhIChtaW4td2lkdGg6IDYwZW0pIHtcclxuXHRcdFx0b3ZlcmZsb3c6IGF1dG87XHJcblx0XHRcdGhlaWdodDogYXV0bztcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbi5mLWNvbnRhaW5lciB7XHJcblx0QGluY2x1ZGUgY2xlYXJmaXg7XHJcblx0QGluY2x1ZGUgYm9yZGVyLWJveDtcclxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XHJcblx0cGFkZGluZzogMCAxZW07XHJcblx0ei1pbmRleDogMDtcclxuXHRtaW4taGVpZ2h0OiAxMDB2aDtcclxuXHJcblx0LmYtbWVudS1hY3RpdmUgJiB7XHJcblx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZSgkbWVudS13aWR0aCwgMCk7XHJcblxyXG5cdFx0QG1lZGlhIChtaW4td2lkdGg6IDYwZW0pIHtcclxuXHRcdFx0bWFyZ2luLWxlZnQ6ICRtZW51LXdpZHRoO1xyXG5cdFx0XHR0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAwKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG59XHJcbiIsIi8vIG1lbnVcclxuLmYtbWVudSB7XHJcblx0QGluY2x1ZGUgYm9yZGVyLWJveDtcclxuXHRwb3NpdGlvbjogZml4ZWQ7XHJcblx0dG9wOiAwO1xyXG5cdGxlZnQ6IDA7XHJcblx0dHJhbnNmb3JtOiB0cmFuc2xhdGUoLSRtZW51LXdpZHRoLCAwKTtcclxuXHR3aWR0aDogJG1lbnUtd2lkdGg7XHJcblx0aGVpZ2h0OiAxMDAlO1xyXG5cdHotaW5kZXg6IDE7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogY29sb3IobWVudS1iYWNrZ3JvdW5kKTtcclxuXHRvdmVyZmxvdy14OiBoaWRkZW47XHJcblx0b3ZlcmZsb3cteTogYXV0bztcclxuXHQtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7XHJcblxyXG5cdC5mLW1lbnUtYWN0aXZlICYge1xyXG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMCk7XHJcblx0fVxyXG5cclxuXHR1bCB7XHJcblx0XHRtYXJnaW4tdG9wOiAwO1xyXG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcclxuXHRcdHBhZGRpbmctbGVmdDogMDtcclxuXHR9XHJcblxyXG5cdD4gdWwge1xyXG5cdFx0bWFyZ2luLXRvcDogMDtcclxuXHRcdG1hcmdpbi1ib3R0b206IDFyZW07XHJcblxyXG5cdFx0PiBsaSB7XHJcblx0XHRcdG1hcmdpbi10b3A6IDFyZW07XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRsaSB7XHJcblx0XHRsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcblx0XHRtYXJnaW4tdG9wOiAwO1xyXG5cdFx0bWFyZ2luLWJvdHRvbTogMDtcclxuXHR9XHJcblxyXG5cdGEge1xyXG5cdFx0ZGlzcGxheTogYmxvY2s7XHJcblx0XHRwYWRkaW5nOiAwLjMzcmVtIDJyZW07XHJcblx0XHRjb2xvcjogY29sb3IobWVudS10ZXh0KSAhaW1wb3J0YW50O1xyXG5cdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cdFx0Zm9udC1zaXplOiAwLjg3NXJlbTtcclxuXHRcdGxpbmUtaGVpZ2h0OiAxLjU7XHJcblxyXG5cdFx0Jjpob3ZlciB7XHJcblx0XHRcdGNvbG9yOiBjb2xvcihtZW51LXRleHQpICFpbXBvcnRhbnQ7XHJcblx0XHRcdHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG5cdFx0fVxyXG5cclxuXHRcdCYuZi1hY3RpdmUge1xyXG5cdFx0XHRib3gtc2hhZG93OiBpbnNldCAwLjI1cmVtIDAgMCAwIGNvbG9yKGFjY2VudCk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQuZi1tZW51X19oZWFkaW5nIHtcclxuXHRcdHBhZGRpbmctbGVmdDogMS41cmVtO1xyXG5cdFx0Zm9udC13ZWlnaHQ6IDcwMDtcclxuXHRcdGZvbnQtc2l6ZTogMC44NzVyZW07XHJcblxyXG5cdFx0Jjpob3ZlciB7XHJcblx0XHRcdGNvbG9yOiBjb2xvcihub3JtYWwpO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG4iLCIvKipcclxuICogRmFicmljYXRvciBzdHlsZXNcclxuICogQGF1dGhvciBMdWtlIEFza2V3XHJcbiAqIENsYXNzIHNlbGVjdG9ycyBhcmUgbmFtZXNwYWNlZCB3aXRoIFwiZi1cIlxyXG4gKi9cbi8qKlxyXG4gKiBHaXRodWItbGlrZSB0aGVtZSBmb3IgUHJpc20uanNcclxuICogQGF1dGhvciBMdWtlIEFza2V3IGh0dHA6Ly9naXRodWIuY29tL2x1a2Vhc2tld1xyXG4gKi9cbmNvZGUsXG5jb2RlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10sXG5wcmVbY2xhc3MqPSdsYW5ndWFnZS0nXSB7XG4gIGNvbG9yOiAjMzMzO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB3aGl0ZS1zcGFjZTogcHJlO1xuICB3b3JkLXNwYWNpbmc6IG5vcm1hbDtcbiAgdGFiLXNpemU6IDQ7XG4gIGh5cGhlbnM6IG5vbmU7XG4gIGZvbnQtZmFtaWx5OiBDb25zb2xhcywgJ0xpYmVyYXRpb24gTW9ubycsIE1lbmxvLCBDb3VyaWVyLCBtb25vc3BhY2U7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIGRpcmVjdGlvbjogbHRyO1xuICBjdXJzb3I6IHRleHQ7XG4gIGxldHRlci1zcGFjaW5nOiBub3JtYWw7IH1cblxucHJlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10ge1xuICBvdmVyZmxvdzogYXV0bztcbiAgbWFyZ2luOiAxZW0gMDtcbiAgcGFkZGluZzogMS4yZW07XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgZm9udC1zaXplOiA4NSU7IH1cblxucCBjb2RlLFxubGkgY29kZSxcbnRhYmxlIGNvZGUge1xuICBtYXJnaW46IDA7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgcGFkZGluZzogMC4yZW0gMDtcbiAgZm9udC1zaXplOiA4NSU7IH1cbiAgcCBjb2RlOmJlZm9yZSwgcCBjb2RlOmFmdGVyLFxuICBsaSBjb2RlOmJlZm9yZSxcbiAgbGkgY29kZTphZnRlcixcbiAgdGFibGUgY29kZTpiZWZvcmUsXG4gIHRhYmxlIGNvZGU6YWZ0ZXIge1xuICAgIGxldHRlci1zcGFjaW5nOiAtMC4yZW07XG4gICAgY29udGVudDogJ1xcMDBhMCc7IH1cblxuY29kZSxcbjpub3QocHJlKSA+IGNvZGVbY2xhc3MqPSdsYW5ndWFnZS0nXSxcbnByZVtjbGFzcyo9J2xhbmd1YWdlLSddIHtcbiAgYmFja2dyb3VuZDogI2Y3ZjdmNzsgfVxuXG46bm90KHByZSkgPiBjb2RlW2NsYXNzKj0nbGFuZ3VhZ2UtJ10ge1xuICBwYWRkaW5nOiAwLjFlbTtcbiAgYm9yZGVyLXJhZGl1czogMC4zZW07IH1cblxuLnRva2VuLmNvbW1lbnQsIC50b2tlbi5wcm9sb2csIC50b2tlbi5kb2N0eXBlLCAudG9rZW4uY2RhdGEge1xuICBjb2xvcjogIzk2OTg5NjsgfVxuXG4udG9rZW4ucHVuY3R1YXRpb24sIC50b2tlbi5zdHJpbmcsIC50b2tlbi5hdHJ1bGUsIC50b2tlbi5hdHRyLXZhbHVlIHtcbiAgY29sb3I6ICMxODM2OTE7IH1cblxuLnRva2VuLnByb3BlcnR5LCAudG9rZW4udGFnIHtcbiAgY29sb3I6ICM2M2EzNWM7IH1cblxuLnRva2VuLmJvb2xlYW4sIC50b2tlbi5udW1iZXIge1xuICBjb2xvcjogIzAwODZiMzsgfVxuXG4udG9rZW4uc2VsZWN0b3IsIC50b2tlbi5hdHRyLW5hbWUsXG4udG9rZW4uYXR0ci12YWx1ZSAucHVuY3R1YXRpb246Zmlyc3QtY2hpbGQsIC50b2tlbi5rZXl3b3JkLCAudG9rZW4ucmVnZXgsIC50b2tlbi5pbXBvcnRhbnQge1xuICBjb2xvcjogI2E3MWQ1ZDsgfVxuXG4udG9rZW4ub3BlcmF0b3IsIC50b2tlbi5lbnRpdHksIC50b2tlbi51cmwsXG4ubGFuZ3VhZ2UtY3NzIC50b2tlbi5zdHJpbmcge1xuICBjb2xvcjogI2E3MWQ1ZDsgfVxuXG4udG9rZW4uZW50aXR5IHtcbiAgY3Vyc29yOiBoZWxwOyB9XG5cbi5uYW1lc3BhY2Uge1xuICBvcGFjaXR5OiAwLjc7IH1cblxuLmYtY29sb3ItY2hpcHMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7IH1cblxuLmYtY29sb3ItY2hpcCB7XG4gIGZsZXgtZ3JvdzogMTtcbiAgZmxleC1zaHJpbms6IDA7XG4gIGZsZXgtYmFzaXM6IDEwMCU7XG4gIGJvcmRlci10b3Atd2lkdGg6IDhlbTtcbiAgYm9yZGVyLXRvcC1zdHlsZTogc29saWQ7XG4gIGJvcmRlci1ib3R0b20td2lkdGg6IDA7XG4gIGJvcmRlci1ib3R0b20tc3R5bGU6IHNvbGlkO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXNpemU6IDAuNzVlbTtcbiAgcGFkZGluZzogMWVtO1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDYwZW0pIHtcbiAgICAuZi1jb2xvci1jaGlwIHtcbiAgICAgIGZsZXgtYmFzaXM6IDEzZW07IH0gfVxuICAuZi1jb2xvci1jaGlwIC5mLWNvbG9yLWNoaXBfX2NvbG9yIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGNvbnRlbnQ6IGF0dHIoZGF0YS1jb2xvcik7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDsgfVxuXG4uZi1jb250cm9scyB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cbiAgLmYtY29udHJvbHM6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoOyB9XG4gIC5mLWNvbnRyb2xzOmJlZm9yZSwgLmYtY29udHJvbHM6YWZ0ZXIge1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIGNvbnRlbnQ6ICcgJzsgfVxuICAuZi1jb250cm9scyAuZi1jb250cm9sIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmbG9hdDogbGVmdDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDMzLjMzMzMzJTtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMXJlbSAwOyB9XG4gICAgLmYtY29udHJvbHMgLmYtY29udHJvbC5mLWFjdGl2ZSB7XG4gICAgICBib3gtc2hhZG93OiBpbnNldCAwIDAuMjVyZW0gMCAwICMwMDgxZmE7IH1cbiAgICAgIC5mLWNvbnRyb2xzIC5mLWNvbnRyb2wuZi1hY3RpdmUgdXNlIHtcbiAgICAgICAgZmlsbDogI2NjY2NjYzsgfVxuICAgIC5mLWNvbnRyb2xzIC5mLWNvbnRyb2wgc3ZnIHtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbiAgICAgIC5mLWNvbnRyb2xzIC5mLWNvbnRyb2wgc3ZnIHVzZSB7XG4gICAgICAgIGZpbGw6ICM3NTc1NzU7IH1cblxuLmYtY29udHJvbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBtYXJnaW4tbGVmdDogMC42NnJlbTsgfVxuICAuZi1jb250cm9sOmZpcnN0LWNoaWxkIHtcbiAgICBtYXJnaW4tbGVmdDogMDsgfVxuICAuZi1jb250cm9sIHN2ZyB7XG4gICAgd2lkdGg6IDFyZW07XG4gICAgaGVpZ2h0OiAxcmVtOyB9XG4gICAgLmYtY29udHJvbCBzdmcgdXNlIHtcbiAgICAgIGZpbGw6ICNjY2NjY2M7IH1cblxuLmYtY29udHJvbC1iYXIge1xuICBwYWRkaW5nOiAxLjI1cmVtIDAgMXJlbTsgfVxuICAuZi1jb250cm9sLWJhcjphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7IH1cbiAgLmYtY29udHJvbC1iYXI6YmVmb3JlLCAuZi1jb250cm9sLWJhcjphZnRlciB7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgY29udGVudDogJyAnOyB9XG5cbi5mLW1lbnUtdG9nZ2xlIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gIC5mLW1lbnUtdG9nZ2xlIHN2ZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luLWJvdHRvbTogLTFweDsgfVxuXG4uZi1pdGVtLWdyb3VwIHtcbiAgbWFyZ2luLXRvcDogM3JlbTtcbiAgbWFyZ2luLWJvdHRvbTogM3JlbTtcbiAgcGFkZGluZy1ib3R0b206IDNyZW07XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjY2NjOyB9XG4gIC5mLWl0ZW0tZ3JvdXA6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoOyB9XG4gIC5mLWl0ZW0tZ3JvdXA6YmVmb3JlLCAuZi1pdGVtLWdyb3VwOmFmdGVyIHtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBjb250ZW50OiAnICc7IH1cbiAgLmYtaXRlbS1ncm91cDpsYXN0LWNoaWxkIHtcbiAgICBib3JkZXItYm90dG9tOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgLmYtaXRlbS1ncm91cCB+IC5mLWl0ZW0tZ3JvdXAge1xuICAgIG1hcmdpbi10b3A6IDA7IH1cbiAgLmYtaXRlbS1ncm91cCA+IC5mLWl0ZW0tZ3JvdXAge1xuICAgIHBhZGRpbmctYm90dG9tOiAxLjVyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xuICAgIGJvcmRlci1ib3R0b206IDA7IH1cbiAgICAuZi1pdGVtLWdyb3VwID4gLmYtaXRlbS1ncm91cDpmaXJzdC1vZi10eXBlIHtcbiAgICAgIG1hcmdpbi10b3A6IDA7IH1cbiAgICAuZi1pdGVtLWdyb3VwID4gLmYtaXRlbS1ncm91cDpsYXN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMDsgfVxuXG4uZi1pdGVtLWNvZGUsIC5mLWl0ZW0tc3R5bGVzIHtcbiAgbWFyZ2luLXRvcDogMnJlbTsgfVxuXG4uZi1pdGVtLXByZXZpZXc6YWZ0ZXIge1xuICBjbGVhcjogYm90aDsgfVxuXG4uZi1pdGVtLXByZXZpZXc6YmVmb3JlLCAuZi1pdGVtLXByZXZpZXc6YWZ0ZXIge1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgY29udGVudDogJyAnOyB9XG5cbi5mLWl0ZW0tYm9yZGVyLWJvdHRvbSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjY2NjOyB9XG5cbi5mLWl0ZW0taGVhZGluZy1ncm91cCB7XG4gIG1hcmdpbi1ib3R0b206IC42cmVtO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gIC5mLWl0ZW0taGVhZGluZy1ncm91cDphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7IH1cbiAgLmYtaXRlbS1oZWFkaW5nLWdyb3VwOmJlZm9yZSwgLmYtaXRlbS1oZWFkaW5nLWdyb3VwOmFmdGVyIHtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBjb250ZW50OiAnICc7IH1cblxuLmYtaXRlbS1oZWFkaW5nIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBsaW5lLWhlaWdodDogMTsgfVxuXG4uZi1pdGVtLWNvbnRyb2xzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBtYXJnaW4tbGVmdDogMC41cmVtOyB9XG4gIC5mLWl0ZW0tY29udHJvbHMgLmYtY29udHJvbCB7XG4gICAgd2lkdGg6IDAuODc1cmVtO1xuICAgIGhlaWdodDogMC44NzVyZW07XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZmxvYXQ6IGxlZnQ7IH1cbiAgICAuZi1pdGVtLWNvbnRyb2xzIC5mLWNvbnRyb2w6aG92ZXIgdXNlIHtcbiAgICAgIGZpbGw6ICM3NTc1NzU7IH1cbiAgICAuZi1pdGVtLWNvbnRyb2xzIC5mLWNvbnRyb2wgdXNlIHtcbiAgICAgIGZpbGw6ICNjY2NjY2M7IH1cblxuLmYtaXRlbS1oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi5mLWl0ZW0tbm90ZXMge1xuICBmb250LXNpemU6IDAuODc1cmVtOyB9XG5cbi5mLWl0ZW0tc3R5bGVzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTsgfVxuXG5odG1sIHtcbiAgaGVpZ2h0OiAxMDAlOyB9XG4gIGh0bWwuZi1tZW51LWFjdGl2ZSB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA2MGVtKSB7XG4gICAgICBodG1sLmYtbWVudS1hY3RpdmUge1xuICAgICAgICBvdmVyZmxvdzogYXV0bzsgfSB9XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuZi1tZW51LWFjdGl2ZSBib2R5IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA2MGVtKSB7XG4gICAgICAuZi1tZW51LWFjdGl2ZSBib2R5IHtcbiAgICAgICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgICAgIGhlaWdodDogYXV0bzsgfSB9XG5cbi5mLWNvbnRhaW5lciB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMCAxZW07XG4gIHotaW5kZXg6IDA7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoOyB9XG4gIC5mLWNvbnRhaW5lcjphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7IH1cbiAgLmYtY29udGFpbmVyOmJlZm9yZSwgLmYtY29udGFpbmVyOmFmdGVyIHtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBjb250ZW50OiAnICc7IH1cbiAgLmYtbWVudS1hY3RpdmUgLmYtY29udGFpbmVyIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgxNHJlbSwgMCk7IH1cbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNjBlbSkge1xuICAgICAgLmYtbWVudS1hY3RpdmUgLmYtY29udGFpbmVyIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDE0cmVtO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAwKTsgfSB9XG5cbi5mLW1lbnUge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTE0cmVtLCAwKTtcbiAgd2lkdGg6IDE0cmVtO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDE7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxZjFmMWY7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoOyB9XG4gIC5mLW1lbnUtYWN0aXZlIC5mLW1lbnUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDApOyB9XG4gIC5mLW1lbnUgdWwge1xuICAgIG1hcmdpbi10b3A6IDA7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7IH1cbiAgLmYtbWVudSA+IHVsIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDFyZW07IH1cbiAgICAuZi1tZW51ID4gdWwgPiBsaSB7XG4gICAgICBtYXJnaW4tdG9wOiAxcmVtOyB9XG4gIC5mLW1lbnUgbGkge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgLmYtbWVudSBhIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nOiAwLjMzcmVtIDJyZW07XG4gICAgY29sb3I6ICNjY2NjY2MgIWltcG9ydGFudDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC1zaXplOiAwLjg3NXJlbTtcbiAgICBsaW5lLWhlaWdodDogMS41OyB9XG4gICAgLmYtbWVudSBhOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjY2NjY2NjICFpbXBvcnRhbnQ7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuICAgIC5mLW1lbnUgYS5mLWFjdGl2ZSB7XG4gICAgICBib3gtc2hhZG93OiBpbnNldCAwLjI1cmVtIDAgMCAwICMwMDgxZmE7IH1cbiAgLmYtbWVudSAuZi1tZW51X19oZWFkaW5nIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDEuNXJlbTtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIGZvbnQtc2l6ZTogMC44NzVyZW07IH1cbiAgICAuZi1tZW51IC5mLW1lbnVfX2hlYWRpbmc6aG92ZXIge1xuICAgICAgY29sb3I6ICM3NTc1NzU7IH1cblxuW2RhdGEtdmFyaWF0aW9uPVwidHJ1ZVwiXSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZSAhaW1wb3J0YW50O1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXJpZ2h0OiAzMCU7XG4gIGZsb2F0OiBub25lOyB9XG5cbltkYXRhLXZhcmlhdGlvbl06OmFmdGVyIHtcbiAgY29udGVudDogXCJjbGFzczogXCIgYXR0cihjbGFzcyk7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAtMnB4O1xuICBsZWZ0OiBjYWxjKDEwMCUgKyAxMHB4KTtcbiAgZm9udDogMXJlbSBub3JtYWwgbW9ub3NwYWNlO1xuICBjb2xvcjogYmxhY2s7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY2ZTM7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNmZmQ5Yjg7XG4gIHBhZGRpbmc6IDNweCA1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgfVxuXG4udGFibGVbZGF0YS12YXJpYXRpb249XCJ0cnVlXCJdIHtcbiAgZGlzcGxheTogdGFibGU7XG4gIG1hZ2luLXJpZ2h0OiAwO1xuICBtYXJnaW4tdG9wOiAzMHB4OyB9XG5cbi50YWJsZVtkYXRhLXZhcmlhdGlvbl06OmFmdGVyIHtcbiAgdG9wOiAtMS42cmVtO1xuICBib3R0b206IGF1dG87XG4gIGxlZnQ6IDA7IH1cblxuc3Bhbi50ZXh0SW5wdXRDbGFzc2VzIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBmb250OiAxcmVtIG5vcm1hbCBtb25vc3BhY2U7XG4gIGNvbG9yOiBibGFjaztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjZlMztcbiAgYm9yZGVyOiAxcHggc29saWQgI2ZmZDliODtcbiAgbWFyZ2luOiAyMHB4IDAgMDtcbiAgcGFkZGluZzogM3B4IDVweDtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICB3aGl0ZS1zcGFjZTogbm93cmFwOyB9XG4gIHNwYW4udGV4dElucHV0Q2xhc3Nlczo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IG5vbmU7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuXG5zcGFuLnRleHRJbnB1dENsYXNzZXMgKyBpbnB1dFt0eXBlPVwidGV4dFwiXSB7XG4gIHdpZHRoOiA3MCU7IH1cblxuLnZhcmlhdGlvbnMgY29kZS5sYW5ndWFnZS1jc3Mge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZy1sZWZ0OiAxNXB4OyB9XG4gIC52YXJpYXRpb25zIGNvZGUubGFuZ3VhZ2UtY3NzLnNlbGVjdGVkIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJvcmRlci1sZWZ0OiAxMHB4IHNvbGlkICNmZjkwOTA7XG4gICAgbWFyZ2luOiA1cHggLTVweDsgfVxuXG4uZi1pdGVtLWhpZGRlblt2YXJpYXRpb249XCJ0cnVlXCJdIHtcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9XG4iLCIvLyBGQUJSSUNBVE9SIENVU1RPTUlaQVRJT05TXHJcbi8vIGdldFZhcmlhdGlvbnMgc3R5bGVzXHJcbltkYXRhLXZhcmlhdGlvbj1cInRydWVcIl0ge1xyXG5cdHBvc2l0aW9uOiByZWxhdGl2ZSAhaW1wb3J0YW50O1xyXG5cdG1hcmdpbi10b3A6IDEwcHg7XHJcblx0ZGlzcGxheTogYmxvY2s7XHJcblx0bWFyZ2luLXJpZ2h0OiAzMCU7XHJcblx0ZmxvYXQ6IG5vbmU7XHJcbn1cclxuW2RhdGEtdmFyaWF0aW9uXTo6YWZ0ZXIge1xyXG5cdGNvbnRlbnQ6ICdjbGFzczogJyBhdHRyKGNsYXNzKTtcclxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0Ym90dG9tOiAtMnB4O1xyXG5cdGxlZnQ6IGNhbGMoMTAwJSArIDEwcHgpO1xyXG5cdGZvbnQ6IDFyZW0gbm9ybWFsIG1vbm9zcGFjZTtcclxuXHRjb2xvcjogYmxhY2s7XHJcblx0YmFja2dyb3VuZC1jb2xvcjogI2ZmZjZlMztcclxuXHRib3JkZXI6IDFweCBzb2xpZCAjZmZkOWI4O1xyXG5cdHBhZGRpbmc6IDNweCA1cHg7XHJcblx0Ym9yZGVyLXJhZGl1czogM3B4O1xyXG5cdHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbn1cclxuLnRhYmxlW2RhdGEtdmFyaWF0aW9uPVwidHJ1ZVwiXSB7XHJcblx0ZGlzcGxheTogdGFibGU7XHJcblx0bWFnaW4tcmlnaHQ6IDA7XHJcblx0bWFyZ2luLXRvcDogMzBweDtcclxufVxyXG4udGFibGVbZGF0YS12YXJpYXRpb25dOjphZnRlciB7XHJcblx0dG9wOiAtMS42cmVtO1xyXG5cdGJvdHRvbTogYXV0bztcclxuXHRsZWZ0OiAwO1xyXG59XHJcbnNwYW4udGV4dElucHV0Q2xhc3NlcyB7XHJcblx0ZmxvYXQ6IHJpZ2h0O1xyXG4gICAgZm9udDogMXJlbSBub3JtYWwgbW9ub3NwYWNlO1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjZlMztcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmQ5Yjg7XHJcblx0bWFyZ2luOiAyMHB4IDAgMDtcclxuICAgIHBhZGRpbmc6IDNweCA1cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgJjo6YWZ0ZXJ7XHJcbiAgICBcdGNvbnRlbnQ6IG5vbmU7XHJcbiAgICBcdGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbn1cclxuc3Bhbi50ZXh0SW5wdXRDbGFzc2VzICsgaW5wdXRbdHlwZT1cInRleHRcIl0ge1xyXG5cdHdpZHRoOiA3MCU7XHJcbn1cclxuXHJcbi52YXJpYXRpb25zIGNvZGUubGFuZ3VhZ2UtY3NzIHtcclxuXHRkaXNwbGF5OiBibG9jaztcclxuXHRwYWRkaW5nLWxlZnQ6IDE1cHg7XHJcblxyXG5cdCYuc2VsZWN0ZWQge1xyXG5cdFx0YmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcblx0ICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBcdGJvcmRlci1sZWZ0OiAxMHB4IHNvbGlkICNmZjkwOTA7XHJcbiAgICBcdG1hcmdpbjogNXB4IC01cHg7XHJcblx0fVxyXG59XHJcblxyXG4uZi1pdGVtLWhpZGRlblt2YXJpYXRpb249XCJ0cnVlXCJdIHtcclxuXHRkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbn0iXX0= */
